tosca_definitions_version: cloudify_dsl_1_3

imports:
- https://raw.githubusercontent.com/cloudify-cosmo/cloudify-manager/4.1/resources/rest-service/cloudify/types/types.yaml
- http://getcloudify.org.s3.amazonaws.com/spec/aws-plugin/1.4.13/plugin.yaml
- plugin.yaml

inputs:

  aws_access_key_id:
    type: string
    default: { get_secret: aws_access_key_id }

  aws_secret_access_key:
    type: string
    default: { get_secret: aws_secret_access_key }

  aws_region_name:
    type: string
    default: { get_secret: ec2_region_name }

dsl_definitions:

  client_config: &client_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    region_name: { get_input: aws_region_name }

  aws_config: &aws_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    ec2_region_name: { get_input: aws_region_name }

node_templates:

#  cloudformation_stack:
#    type: cloudify.nodes.aws.CloudFormation.Stack
#    properties:
#      resource_config:
#        kwargs:
#          StackName: test-cloudformation1
#          TemplateBody:
#            {
#              "AWSTemplateFormatVersion": "2010-09-09",
#              "Description": "A sample template",
#              "Resources": {
#                "MyEC2Instance": {
#                  "Type": "AWS::EC2::Instance",
#                  "Properties": {
#                    "ImageId": "ami-876facc3",
#                    "InstanceType": "t1.micro",
#                    "KeyName": "testkey",
#                    "BlockDeviceMappings": [{
#                        "DeviceName": "/dev/sdm",
#                        "Ebs": {
#                          "VolumeType": "io1",
#                          "Iops": "200",
#                          "DeleteOnTermination": "false",
#                          "VolumeSize": "20"
#                        }
#                    }]
#                  }
#                }
#              }
#            }
#      client_config:
#        aws_access_key_id: { get_input: aws_access_key_id }
#        aws_secret_access_key: { get_input: aws_secret_access_key }
#        region_name: us-west-1 # to match template
#
#  cloudformation_stack2:
#    type: cloudify.nodes.aws.CloudFormation.Stack
#    properties:
#      resource_config:
#        kwargs:
#          StackName: test-cloudformation2
#          TemplateURL: https://s3-us-west-1.amazonaws.com/cf-templates-1599a9xjo0snl-us-west-1/2017177zh7-test-new.templateuwj91r7rjrb
#      client_config:
#        aws_access_key_id: { get_input: aws_access_key_id }
#        aws_secret_access_key: { get_input: aws_secret_access_key }
#        region_name: us-west-1 # to match template

  cloudformation_stack3:
    type: cloudify.nodes.aws.CloudFormation.Stack
    properties:
      resource_id: { concat: [ { get_input: aws_region_name }, cfntest ] }
      resource_config:
        kwargs:
          StackName: cfntest
          TemplateBody:
            AWSTemplateFormatVersion: "2010-09-09"
            Description: A sample template
            Resources:
              AdmLaunchConfiguration:
                Type: "AWS::AutoScaling::LaunchConfiguration"
                Properties:
                  ImageId: ami-c58c1dd3
                  InstanceType: t2.micro
                Metadata:
                  AWS::CloudFormation::Init:
                    configSets:
                      ascending:
                        - "config1"
                        - "config2"
                      descending:
                        - "config2"
                        - "config1"
                    config1:
                      commands:
                        test:
                          command: "echo \"$CFNTEST\" > test.txt"
                          env:
                            CFNTEST: "I come from config1."
                          cwd: "~"
                    config2:
                      commands:
                        test:
                          command: "echo \"$CFNTEST\" > test.txt"
                          env:
                            CFNTEST: "I come from config2"
                          cwd: "~"

      client_config: *client_config
