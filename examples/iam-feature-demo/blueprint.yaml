tosca_definitions_version: cloudify_dsl_1_3

description: >
  Example blueprint showing AWS IAM functionality.

imports:
- https://raw.githubusercontent.com/cloudify-cosmo/cloudify-manager/4.1/resources/rest-service/cloudify/types/types.yaml
- http://getcloudify.org.s3.amazonaws.com/spec/aws-plugin/1.4.13/plugin.yaml
- plugin.yaml

inputs:

  aws_access_key_id:
    type: string
    default: { get_secret: aws_access_key_id }

  aws_secret_access_key:
    type: string
    default: { get_secret: aws_secret_access_key }

  aws_region_name:
    type: string
    default: { get_secret: aws_region_name }

dsl_definitions:
  client_config: &client_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    region_name: { get_input: aws_region_name }

  aws_config: &aws_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    ec2_region_name: { get_input: aws_region_name }

node_templates:

  pmcfy_launch_configuration:
    type: cloudify.nodes.aws.autoscaling.LaunchConfiguration
    properties:
      resource_config:
        kwargs:
          LaunchConfigurationName: pmcfy_launch_configuration
          ImageId: ami-c58c1dd3
          InstanceType: t2.nano
      client_config: *client_config
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          inputs:
            resource_config:
              LaunchConfigurationName: pmcfy_launch_configuration
              ImageId: ami-c58c1dd3
              InstanceType: t2.nano
              IamInstanceProfile: { get_attribute: [ pmcfy_iam_user_instance_profile, aws_resource_arn ] } # Succeeds on retry.
    relationships:
      - type: cloudify.relationships.depends_on
        target: pmcfy_iam_user_instance_profile

  pmcfy_iam_user_api_access:
    type: cloudify.nodes.aws.iam.AccessKey
    relationships:
    - type: cloudify.relationships.aws.iam.access_key.connected_to
      target: pmcfy_iam_user

  pmcfy_iam_user_login_profile:
    type: cloudify.nodes.aws.iam.LoginProfile
    properties:
      resource_config:
        kwargs:
          Password: !!str Cl0ud1fy2017
    relationships:
    - type: cloudify.relationships.aws.iam.login_profile.connected_to
      target: pmcfy_iam_user

  pmcfy_iam_user:
    type: cloudify.nodes.aws.iam.User
    properties:
      resource_id: !!str CloudifyUser=,.@-Test
      client_config: *client_config
      resource_config:
        kwargs:
          Path: !!str /!"#$%&'()*+,-.0123456789:;<=>?@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~/
    relationships:
    - type: cloudify.relationships.aws.iam.user.connected_to
      target: pmcfy_iam_group
    - type: cloudify.relationships.aws.iam.user.connected_to
      target: pmcfy_iam_policy_vpc_access

  pmcfy_iam_group:
    type: cloudify.nodes.aws.iam.Group
    properties:
      resource_id: !!str pmcfy_CloudifyGroup
      client_config: *client_config
      resource_config:
        kwargs:
          Path: !!str /!"#$%&'()*+,-.0123456789:;<=>?@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~/
    relationships:
    - type: cloudify.relationships.aws.iam.group.connected_to
      target: pmcfy_iam_policy_vpc_access

  pmcfy_iam_user_instance_profile:
    type: cloudify.nodes.aws.iam.InstanceProfile
    properties:
      client_config: *client_config
      # resource_id: pmcfyinstanceprofile
      resource_config:
        kwargs:
          # InstanceProfileName: pmcfyinstanceprofile
          Path: '/pmcfy_iam_user_instance_profile/'
    relationships:
    - type: cloudify.relationships.depends_on
      target: pmcfy_iam_role

  pmcfy_iam_role_policy:
    type: cloudify.nodes.aws.iam.RolePolicy
    properties:
      resource_id: pmcfy_iam_role_policy
      client_config: *client_config
      resource_config:
        kwargs:
          PolicyName: pmcfy_iam_role_policy
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": {
                "Effect": "Allow",
                "Resource": "*",
                "Action": "sts:AssumeRole"
              }
            }
    relationships:
    - type: cloudify.relationships.depends_on
      target: pmcfy_iam_role

  pmcfy_iam_role:
    type: cloudify.nodes.aws.iam.Role
    properties:
      resource_id: pmcfy_lambdarole
      client_config: *client_config
      resource_config:
        kwargs:
          Path: !!str /service-role/
          AssumeRolePolicyDocument:
            Version: !!str 2012-10-17
            Statement:
            - Effect: Allow
              Principal:
                Service: !!str lambda.amazonaws.com
              Action: !!str sts:AssumeRole
    relationships:
    - type: cloudify.relationships.aws.iam.role.connected_to
      target: pmcfy_iam_policy_vpc_access
    - type: cloudify.relationships.aws.iam.role.connected_to
      target: pmcfy_iam_policy_cloudwatch_access
     
  pmcfy_iam_policy_vpc_access:
    type: cloudify.nodes.aws.iam.Policy
    properties:
      resource_id: pmcfy_vpcpolicy
      client_config: *client_config
      resource_config:
        kwargs:
          Description: >-
            Grants access to EC2 network components
          Path: !!str /service-role/
          PolicyDocument:
            Version: !!str 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - !!str ec2:CreateNetworkInterface
              - !!str ec2:DeleteNetworkInterface
              - !!str ec2:DescribeNetworkInterfaces
              Resource: '*'

  pmcfy_iam_policy_cloudwatch_access:
    type: cloudify.nodes.aws.iam.Policy
    properties:
      resource_id: pmcfy_iampolicy
      client_config: *client_config
      resource_config:
        kwargs:
          Description: >-
            Grants access to CloudWatch logs
          Path: !!str /service-role/
          PolicyDocument:
            Version: !!str 2012-10-17
            Statement:
            - Effect: Allow
              Action: !!str logs:CreateLogGroup
              Resource: !!str arn:aws:logs:us-east-1:352582918444:*
            - Effect: Allow
              Action:
              - !!str logs:CreateLogStream'
              - !!str logs:PutLogEvents'
              Resource:
              - !!str arn:aws:logs:us-east-1:352582918444:log-group:/aws/lambda/myLambdaFunction:*
