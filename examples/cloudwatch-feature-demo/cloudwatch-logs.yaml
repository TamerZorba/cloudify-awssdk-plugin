tosca_definitions_version: cloudify_dsl_1_3

imports:
- https://raw.githubusercontent.com/cloudify-cosmo/cloudify-manager/4.1/resources/rest-service/cloudify/types/types.yaml
- http://getcloudify.org.s3.amazonaws.com/spec/aws-plugin/1.4.13/plugin.yaml
- plugin.yaml

inputs:

  aws_access_key_id:
    type: string
    default: { get_secret: aws_access_key_id }

  aws_secret_access_key:
    type: string
    default: { get_secret: aws_secret_access_key }

  aws_region_name:
    type: string
    default: { get_secret: aws_region_name }

dsl_definitions:

  client_config: &client_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    region_name: { get_input: aws_region_name }

  aws_config: &aws_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    ec2_region_name: { get_input: aws_region_name }

node_templates:

  my_metric_filter:
    type: cloudify.nodes.aws.cloudwatchlogs.MetricFilter
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          filterPattern: "[ip, identity, user_id, timestamp, request, status_code, size]"
          metricTransformations:
          - defaultValue: 0
            metricValue: "$size"
            metricNamespace: "MyApp"
            metricName: "Volume"
    relationships:
    - type: cloudify.relationships.contained_in
      target: my_log_group

  my_log_stream:
    type: cloudify.nodes.aws.cloudwatchlogs.LogGroup
    properties:
      client_config: *client_config
    relationships:
    - type: cloudify.relationships.contained_in
      target: my_log_group

  my_log_group:
    type: cloudify.nodes.aws.cloudwatchlogs.LogGroup
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          tags:
            created_by: cloudify

